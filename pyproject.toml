[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "geneforgelang"
version = "0.1.0"
description = "GeneForgeLang: a DSL for genomic workflows"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [{ name = "GeneForgeLang Team" }]
dependencies = [
  "PyYAML>=6.0",
]

[project.optional-dependencies]
lexer = ["ply>=3.11"]
apps = ["gradio>=5.35.0", "python-dotenv>=1.0", "google-generativeai>=0.7"]
ml = [
  "torch>=2.3; platform_machine!='arm64'",
  "transformers>=4.40",
]
server = [
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "httpx>=0.25.0",
  "slowapi>=0.1.7",
  "pydantic>=2.0.0",
  "starlette>=0.47.2",
  "aiohttp>=3.12.14",
]
test = [
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "pytest-mock>=3.10",
  "coverage>=7.0",
]
qa = [
  "ruff>=0.1.0",
  "black>=23.0",
  "mypy>=1.5",
  "bandit[toml]>=1.7",
  "safety>=2.3",
  "pre-commit>=3.0",
]
schema = [
  "jsonschema>=4.0",
  "pydantic>=2.0.0",
]
docs = [
  "mkdocs-material>=9.0",
  "mkdocs>=1.5",
]
minimal = []
full = [
  "gradio>=5.35.0",
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "httpx>=0.25.0",
  "slowapi>=0.1.7",
  "pydantic>=2.0.0",
  "starlette>=0.47.2",
  "aiohttp>=3.12.14",
  "python-dotenv>=1.0",
  "google-generativeai>=0.7",
  "ply>=3.11",
  "torch>=2.3; platform_machine!='arm64'",
  "transformers>=4.40",
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "pytest-mock>=3.10",
  "coverage>=7.0",
  "ruff>=0.1.0",
  "black>=23.0",
  "mypy>=1.5",
  "bandit[toml]>=1.7",
  "safety>=2.3",
  "pre-commit>=3.0",
  "jsonschema>=4.0",
  "mkdocs-material>=9.0",
  "mkdocs>=1.5",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["gfl*", "gf*"]

[project.scripts]
gfl = "gfl.cli_main:main"
gfl-parse = "gfl.cli:cmd_parse"
gfl-validate = "gfl.cli:cmd_validate"
gfl-enhanced = "gfl.enhanced_cli:main"
gfl-inference = "gfl.cli_inference:main"
gfl-server = "gfl.server_launcher:main"
gfl-web = "gfl.web_interface:launch_web_interface"
gfl-api = "gfl.api_server:run_server"
gfl-info = "gfl.cli_utils:info"

# Entry points for GFL plugins
[project.entry-points."gfl.plugins"]
alpha_genome = "gfl.plugins.alpha_genome:AlphaGenomePlugin"
variant_sim = "gfl.plugins.variant_sim:VariantSimulationPlugin"

# Entry points for GFL validators
[project.entry-points."gfl.validators"]
semantic = "gfl.semantic_validator:SemanticValidator"
schema = "gfl.enhanced_schema_validator:EnhancedSchemaValidator"

# Entry points for GFL parsers
[project.entry-points."gfl.parsers"]
yaml_parser = "gfl.yaml_lang.parser:YamlParser"
default_parser = "gfl.parser:parse_gfl"
grammar_parser = "gfl.grammar_parser:parse_gfl_grammar"

# Security tool configurations
[tool.bandit]
# Skip certain security checks that are acceptable in this context
# B101: assert used - OK in development and debugging code
# B110: try/except pass - OK for graceful degradation
# B112: try/except continue - OK for robust iteration
# B311: random module - OK for non-cryptographic uses in scripts
# B403: pickle imports - Documented risk in genetics tools
# B404: subprocess imports - OK for development scripts
skips = ["B101", "B110", "B112", "B311", "B403", "B404", "B603", "B607"]
exclude_dirs = ["tests", "docs", "examples", "scripts", "tools", "bench"]
confidence = "MEDIUM"
severity = "MEDIUM"
