Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> SIMULATE IDENTIFIER
Rule 5     statement -> EXPERIMENT LBRACE experiment_body RBRACE
Rule 6     experiment_body -> experiment_fields
Rule 7     experiment_fields -> experiment_fields experiment_field
Rule 8     experiment_fields -> experiment_field
Rule 9     experiment_field -> TYPE COLON IDENTIFIER
Rule 10    experiment_field -> TOOL COLON IDENTIFIER
Rule 11    experiment_field -> PARAMS COLON param_dict
Rule 12    param_dict -> LBRACE param_pairs RBRACE
Rule 13    param_pairs -> param_pairs COMMA param_pair
Rule 14    param_pairs -> param_pair
Rule 15    param_pair -> IDENTIFIER COLON param_value
Rule 16    param_value -> TRUE
Rule 17    param_value -> FALSE
Rule 18    param_value -> NUMBER
Rule 19    param_value -> IDENTIFIER

Terminals, with rules where they appear

COLON                : 9 10 11 15
COMMA                : 13
EXPERIMENT           : 5
FALSE                : 17
IDENTIFIER           : 4 9 10 15 19
LBRACE               : 5 12
NUMBER               : 18
PARAMS               : 11
RBRACE               : 5 12
SIMULATE             : 4
TOOL                 : 10
TRUE                 : 16
TYPE                 : 9
error                : 

Nonterminals, with rules where they appear

experiment_body      : 5
experiment_field     : 7 8
experiment_fields    : 6 7
param_dict           : 11
param_pair           : 13 14
param_pairs          : 12 13
param_value          : 15
program              : 0
statement            : 2 3
statements           : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . SIMULATE IDENTIFIER
    (5) statement -> . EXPERIMENT LBRACE experiment_body RBRACE

    SIMULATE        shift and go to state 4
    EXPERIMENT      shift and go to state 5

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . SIMULATE IDENTIFIER
    (5) statement -> . EXPERIMENT LBRACE experiment_body RBRACE

    $end            reduce using rule 1 (program -> statements .)
    SIMULATE        shift and go to state 4
    EXPERIMENT      shift and go to state 5

    statement                      shift and go to state 6

state 3

    (3) statements -> statement .

    SIMULATE        reduce using rule 3 (statements -> statement .)
    EXPERIMENT      reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> SIMULATE . IDENTIFIER

    IDENTIFIER      shift and go to state 7


state 5

    (5) statement -> EXPERIMENT . LBRACE experiment_body RBRACE

    LBRACE          shift and go to state 8


state 6

    (2) statements -> statements statement .

    SIMULATE        reduce using rule 2 (statements -> statements statement .)
    EXPERIMENT      reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)


state 7

    (4) statement -> SIMULATE IDENTIFIER .

    SIMULATE        reduce using rule 4 (statement -> SIMULATE IDENTIFIER .)
    EXPERIMENT      reduce using rule 4 (statement -> SIMULATE IDENTIFIER .)
    $end            reduce using rule 4 (statement -> SIMULATE IDENTIFIER .)


state 8

    (5) statement -> EXPERIMENT LBRACE . experiment_body RBRACE
    (6) experiment_body -> . experiment_fields
    (7) experiment_fields -> . experiment_fields experiment_field
    (8) experiment_fields -> . experiment_field
    (9) experiment_field -> . TYPE COLON IDENTIFIER
    (10) experiment_field -> . TOOL COLON IDENTIFIER
    (11) experiment_field -> . PARAMS COLON param_dict

    TYPE            shift and go to state 12
    TOOL            shift and go to state 13
    PARAMS          shift and go to state 14

    experiment_body                shift and go to state 9
    experiment_fields              shift and go to state 10
    experiment_field               shift and go to state 11

state 9

    (5) statement -> EXPERIMENT LBRACE experiment_body . RBRACE

    RBRACE          shift and go to state 15


state 10

    (6) experiment_body -> experiment_fields .
    (7) experiment_fields -> experiment_fields . experiment_field
    (9) experiment_field -> . TYPE COLON IDENTIFIER
    (10) experiment_field -> . TOOL COLON IDENTIFIER
    (11) experiment_field -> . PARAMS COLON param_dict

    RBRACE          reduce using rule 6 (experiment_body -> experiment_fields .)
    TYPE            shift and go to state 12
    TOOL            shift and go to state 13
    PARAMS          shift and go to state 14

    experiment_field               shift and go to state 16

state 11

    (8) experiment_fields -> experiment_field .

    TYPE            reduce using rule 8 (experiment_fields -> experiment_field .)
    TOOL            reduce using rule 8 (experiment_fields -> experiment_field .)
    PARAMS          reduce using rule 8 (experiment_fields -> experiment_field .)
    RBRACE          reduce using rule 8 (experiment_fields -> experiment_field .)


state 12

    (9) experiment_field -> TYPE . COLON IDENTIFIER

    COLON           shift and go to state 17


state 13

    (10) experiment_field -> TOOL . COLON IDENTIFIER

    COLON           shift and go to state 18


state 14

    (11) experiment_field -> PARAMS . COLON param_dict

    COLON           shift and go to state 19


state 15

    (5) statement -> EXPERIMENT LBRACE experiment_body RBRACE .

    SIMULATE        reduce using rule 5 (statement -> EXPERIMENT LBRACE experiment_body RBRACE .)
    EXPERIMENT      reduce using rule 5 (statement -> EXPERIMENT LBRACE experiment_body RBRACE .)
    $end            reduce using rule 5 (statement -> EXPERIMENT LBRACE experiment_body RBRACE .)


state 16

    (7) experiment_fields -> experiment_fields experiment_field .

    TYPE            reduce using rule 7 (experiment_fields -> experiment_fields experiment_field .)
    TOOL            reduce using rule 7 (experiment_fields -> experiment_fields experiment_field .)
    PARAMS          reduce using rule 7 (experiment_fields -> experiment_fields experiment_field .)
    RBRACE          reduce using rule 7 (experiment_fields -> experiment_fields experiment_field .)


state 17

    (9) experiment_field -> TYPE COLON . IDENTIFIER

    IDENTIFIER      shift and go to state 20


state 18

    (10) experiment_field -> TOOL COLON . IDENTIFIER

    IDENTIFIER      shift and go to state 21


state 19

    (11) experiment_field -> PARAMS COLON . param_dict
    (12) param_dict -> . LBRACE param_pairs RBRACE

    LBRACE          shift and go to state 23

    param_dict                     shift and go to state 22

state 20

    (9) experiment_field -> TYPE COLON IDENTIFIER .

    TYPE            reduce using rule 9 (experiment_field -> TYPE COLON IDENTIFIER .)
    TOOL            reduce using rule 9 (experiment_field -> TYPE COLON IDENTIFIER .)
    PARAMS          reduce using rule 9 (experiment_field -> TYPE COLON IDENTIFIER .)
    RBRACE          reduce using rule 9 (experiment_field -> TYPE COLON IDENTIFIER .)


state 21

    (10) experiment_field -> TOOL COLON IDENTIFIER .

    TYPE            reduce using rule 10 (experiment_field -> TOOL COLON IDENTIFIER .)
    TOOL            reduce using rule 10 (experiment_field -> TOOL COLON IDENTIFIER .)
    PARAMS          reduce using rule 10 (experiment_field -> TOOL COLON IDENTIFIER .)
    RBRACE          reduce using rule 10 (experiment_field -> TOOL COLON IDENTIFIER .)


state 22

    (11) experiment_field -> PARAMS COLON param_dict .

    TYPE            reduce using rule 11 (experiment_field -> PARAMS COLON param_dict .)
    TOOL            reduce using rule 11 (experiment_field -> PARAMS COLON param_dict .)
    PARAMS          reduce using rule 11 (experiment_field -> PARAMS COLON param_dict .)
    RBRACE          reduce using rule 11 (experiment_field -> PARAMS COLON param_dict .)


state 23

    (12) param_dict -> LBRACE . param_pairs RBRACE
    (13) param_pairs -> . param_pairs COMMA param_pair
    (14) param_pairs -> . param_pair
    (15) param_pair -> . IDENTIFIER COLON param_value

    IDENTIFIER      shift and go to state 26

    param_pairs                    shift and go to state 24
    param_pair                     shift and go to state 25

state 24

    (12) param_dict -> LBRACE param_pairs . RBRACE
    (13) param_pairs -> param_pairs . COMMA param_pair

    RBRACE          shift and go to state 27
    COMMA           shift and go to state 28


state 25

    (14) param_pairs -> param_pair .

    RBRACE          reduce using rule 14 (param_pairs -> param_pair .)
    COMMA           reduce using rule 14 (param_pairs -> param_pair .)


state 26

    (15) param_pair -> IDENTIFIER . COLON param_value

    COLON           shift and go to state 29


state 27

    (12) param_dict -> LBRACE param_pairs RBRACE .

    TYPE            reduce using rule 12 (param_dict -> LBRACE param_pairs RBRACE .)
    TOOL            reduce using rule 12 (param_dict -> LBRACE param_pairs RBRACE .)
    PARAMS          reduce using rule 12 (param_dict -> LBRACE param_pairs RBRACE .)
    RBRACE          reduce using rule 12 (param_dict -> LBRACE param_pairs RBRACE .)


state 28

    (13) param_pairs -> param_pairs COMMA . param_pair
    (15) param_pair -> . IDENTIFIER COLON param_value

    IDENTIFIER      shift and go to state 26

    param_pair                     shift and go to state 30

state 29

    (15) param_pair -> IDENTIFIER COLON . param_value
    (16) param_value -> . TRUE
    (17) param_value -> . FALSE
    (18) param_value -> . NUMBER
    (19) param_value -> . IDENTIFIER

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NUMBER          shift and go to state 35
    IDENTIFIER      shift and go to state 31

    param_value                    shift and go to state 32

state 30

    (13) param_pairs -> param_pairs COMMA param_pair .

    RBRACE          reduce using rule 13 (param_pairs -> param_pairs COMMA param_pair .)
    COMMA           reduce using rule 13 (param_pairs -> param_pairs COMMA param_pair .)


state 31

    (19) param_value -> IDENTIFIER .

    RBRACE          reduce using rule 19 (param_value -> IDENTIFIER .)
    COMMA           reduce using rule 19 (param_value -> IDENTIFIER .)


state 32

    (15) param_pair -> IDENTIFIER COLON param_value .

    RBRACE          reduce using rule 15 (param_pair -> IDENTIFIER COLON param_value .)
    COMMA           reduce using rule 15 (param_pair -> IDENTIFIER COLON param_value .)


state 33

    (16) param_value -> TRUE .

    RBRACE          reduce using rule 16 (param_value -> TRUE .)
    COMMA           reduce using rule 16 (param_value -> TRUE .)


state 34

    (17) param_value -> FALSE .

    RBRACE          reduce using rule 17 (param_value -> FALSE .)
    COMMA           reduce using rule 17 (param_value -> FALSE .)


state 35

    (18) param_value -> NUMBER .

    RBRACE          reduce using rule 18 (param_value -> NUMBER .)
    COMMA           reduce using rule 18 (param_value -> NUMBER .)

