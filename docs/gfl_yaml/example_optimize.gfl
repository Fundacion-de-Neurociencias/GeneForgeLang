plan:
  goal: "Find a stable RNA hairpin sequence by iterative mutation."
  metadata:
    author: "GFL_Bot"
    version: 2.1

  steps:
    - name: initial_sequence_step
      thought: "Define the starting RNA sequence for the optimization."
      type: define
      attrs:
        # This step injects the starting sequence into the context
        sequence: "GGACUUCGGUCC"

    - name: optimizer_loop
      thought: "Run 10 iterations of mutation and stability check to find the sequence with the lowest free energy."
      optimize:
        goal: "minimize ${stability_test.result.free_energy}"
        iterations: 10
        # 'using' defines the generator step
        using:
          name: mutation_step
          type: mutate_sequence
          attrs:
            # On the first iteration, current_best is empty, so the default is used.
            # On subsequent iterations, it uses the sequence from the best previous run.
            sequence: "${current_best.mutation_step.result.mutated_sequence | default: ${initial_sequence_step.result.defined_data.sequence}}"
            num_mutations: 1 # Change only one base per iteration
        # 'evaluate' defines the steps to score the candidate
        evaluate:
          - name: stability_test
            type: predict_ss
            attrs:
              sequence: "${mutation_step.result.mutated_sequence}"

    - name: final_report
      thought: "Log the best sequence found and its MFE score."
      type: log_message
      attrs:
        message: "Optimization complete. Best sequence found: ${optimizer_loop.result.best_sequence} with MFE: ${optimizer_loop.result.best_score}"
